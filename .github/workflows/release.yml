name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/cognisphere-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/cognisphere-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Generate release artifacts
        run: |
          mkdir -p release_artifacts
          
          # Create release notes
          cat > release_artifacts/RELEASE_NOTES.md << EOF
          # The Cognisphere ${{ github.ref_name }}
          
          ## 🚀 What's New
          
          ### Core Features
          - Emergent intelligence simulation engine
          - 500+ agent cognitive architecture
          - Language evolution and myth generation
          - Social dynamics with alliances and betrayals
          - Economic systems with trade and negotiation
          - Memory systems with graph and vector storage
          
          ### Technical Improvements
          - Production-ready Docker containers
          - Automated CI/CD pipelines
          - GitHub Pages deployment
          - Render.com backend hosting
          - Comprehensive testing suite
          
          ### Performance
          - Mock LLM mode for scalable simulation
          - Deterministic seeded runs
          - Optimized memory management
          - Real-time dashboard updates
          
          ## 🐳 Docker Images
          
          \`\`\`bash
          # Backend
          docker pull ghcr.io/${{ github.repository_owner }}/cognisphere-backend:${{ github.ref_name }}
          
          # Frontend  
          docker pull ghcr.io/${{ github.repository_owner }}/cognisphere-frontend:${{ github.ref_name }}
          \`\`\`
          
          ## 🌐 Live Demo
          
          - **Frontend**: https://${{ github.repository_owner }}.github.io/the-cognisphere
          - **API**: https://cognisphere-backend.onrender.com
          
          ## 📖 Documentation
          
          See README.md for complete setup and usage instructions.
          EOF
          
          # Create Docker Compose file for easy deployment
          cat > release_artifacts/docker-compose.yml << EOF
          version: '3.8'
          services:
            backend:
              image: ghcr.io/${{ github.repository_owner }}/cognisphere-backend:${{ github.ref_name }}
              ports:
                - "8000:8000"
              environment:
                - ENV=production
                - LLM_MODE=mock
                - MEM_BACKEND=networkx
                - VEC_BACKEND=faiss
                - SEED=42
              healthcheck:
                test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
                interval: 30s
                timeout: 10s
                retries: 3
          
            frontend:
              image: ghcr.io/${{ github.repository_owner }}/cognisphere-frontend:${{ github.ref_name }}
              ports:
                - "3000:80"
              depends_on:
                - backend
              environment:
                - VITE_API_URL=http://localhost:8000
          EOF
          
          # Create quick start script
          cat > release_artifacts/quick-start.sh << 'EOF'
          #!/bin/bash
          echo "🚀 Starting The Cognisphere ${{ github.ref_name }}"
          
          # Pull latest images
          docker pull ghcr.io/${{ github.repository_owner }}/cognisphere-backend:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository_owner }}/cognisphere-frontend:${{ github.ref_name }}
          
          # Start services
          docker-compose up -d
          
          echo "✅ The Cognisphere is starting up!"
          echo "🌐 Frontend: http://localhost:3000"
          echo "🔌 API: http://localhost:8000"
          echo "📚 API Docs: http://localhost:8000/docs"
          EOF
          
          chmod +x release_artifacts/quick-start.sh
          
          # Create version info
          cat > release_artifacts/VERSION.txt << EOF
          Version: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Build Date: $(date -u)
          Repository: ${{ github.repository }}
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: The Cognisphere ${{ github.ref_name }}
          body_path: release_artifacts/RELEASE_NOTES.md
          files: |
            release_artifacts/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update package visibility
        run: |
          echo "🔓 Making packages public..."
          # This would need to be done manually or via GitHub CLI
          echo "Please make the following packages public in GitHub:"
          echo "- ghcr.io/${{ github.repository_owner }}/cognisphere-backend"
          echo "- ghcr.io/${{ github.repository_owner }}/cognisphere-frontend"
